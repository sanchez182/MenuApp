{"version":3,"sources":["store/types.ts","config/i18n/index.ts","components/Header.tsx","store/actions/langActions.ts","assets/about.jpg","pages/About.tsx","pages/404.tsx","components/Tables.tsx","pages/Homepage.tsx","App.tsx","store/reducers/langReducer.ts","store/index.ts","index.tsx"],"names":["SET_LANGUAGE","translate","key","language","langData","en","es","Header","fixed","transparent","useSelector","state","lang","dispatch","useDispatch","useState","showDropdown","setShowDropdown","dropdownEl","useRef","headerClass","handleClickOutside","useCallback","e","target","closest","current","useEffect","document","addEventListener","removeEventListener","chooseLanguageHandler","value","localStorage","setItem","type","payload","className","Typography","variant","component","align","onClick","ref","About","src","aboutImg","alt","Page404","to","Tables","numberTable","isAvailable","Grid","item","xs","md","Card","style","backgroundColor","CardActionArea","CardContent","display","alignItems","flexWrap","fontSize","color","marginLeft","marginTop","HomePage","container","App","path","exact","localSorageLang","getItem","initialState","langReducer","action","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bc35e715.chunk.js","sourcesContent":["export const SET_LANGUAGE = 'SET_LANGUAGE';\r\n\r\nexport interface LangState {\r\n  language: string;\r\n}\r\n\r\ninterface SetLanguageAction {\r\n  type: typeof SET_LANGUAGE;\r\n  payload: string;\r\n}\r\n\r\nexport type LangAction = SetLanguageAction;","  \r\nimport en from './en.json';\r\nimport es from './es.json';\r\n\r\nexport const translate = (key: string, language: string): string => {\r\n  let langData: { [key: string]: string } = {};\r\n\r\n  if(language === 'EN') {\r\n    langData = en;\r\n  }else if(language === 'ES') {\r\n    langData = es;\r\n  }\r\n\r\n  return langData[key];\r\n}","import React, { useCallback, useState, useEffect, useRef, FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../store';\r\nimport { setLanguage } from '../store/actions/langActions';\r\nimport { Typography } from '@material-ui/core';\r\nimport { translate } from '../config/i18n';\r\n\r\ninterface HeaderProps {\r\n  fixed?: boolean;\r\n  transparent?: boolean;\r\n}\r\n\r\nconst Header: FC<HeaderProps> = ({ fixed, transparent }) => {\r\n  const { language } = useSelector((state: RootState) => state.lang);\r\n  const dispatch = useDispatch();\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const dropdownEl = useRef<HTMLUListElement>(null);\r\n\r\n  let headerClass = 'header';\r\n\r\n  if(fixed) {\r\n    headerClass += ' header--fixed';\r\n  }\r\n\r\n  if(transparent) {\r\n    headerClass += ' header--transparent';\r\n  }\r\n\r\n  const handleClickOutside = useCallback((e) => {\r\n    if(showDropdown && e.target.closest('.dropdown') !== dropdownEl.current) {\r\n      setShowDropdown(false);\r\n    }\r\n  }, [showDropdown, setShowDropdown, dropdownEl]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    }\r\n  }, [handleClickOutside]);\r\n\r\n  const chooseLanguageHandler = (value: string) => {\r\n    setShowDropdown(false);\r\n    dispatch(setLanguage(value));\r\n  }\r\n\r\n  return(\r\n    <header className={headerClass}>\r\n      <div className=\"container\">\r\n        <Typography variant=\"h3\" component=\"h3\"\r\n            align=\"center\">{translate(\"textSelectTable\",language)}  </Typography>\r\n        <div className=\"header__nav\">\r\n          <div className=\"header__nav_lang\">\r\n            <p className=\"selected\" onClick={() => setShowDropdown(true)}>{language}</p>\r\n            {showDropdown && <ul className=\"dropdown\" ref={dropdownEl}>\r\n                <li onClick={() => chooseLanguageHandler('EN')}>EN</li>  \r\n                <li onClick={() => chooseLanguageHandler('ES')}>ES</li>  \r\n              </ul>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import { LangAction, SET_LANGUAGE } from '../types';\r\n\r\n// Set language\r\nexport const setLanguage = (lang: string): LangAction => {\r\n  localStorage.setItem('language', lang);\r\n  return {\r\n    type: SET_LANGUAGE,\r\n    payload: lang\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/about.b42a20a2.jpg\";","import React, { Fragment, FC } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Header from '../components/Header';\nimport aboutImg from '../assets/about.jpg';\nimport { RootState } from '../store';\nimport { translate } from '../config/i18n';\n\nconst About: FC = () => {\n  const { language } = useSelector((state: RootState) => state.lang);\n\n  return(\n    <Fragment>\n      <Header />\n      <section className=\"about\">\n        <div className=\"container\">\n          <h1>{translate('about', language)}</h1>\n          <img src={aboutImg} alt=\"\" />\n          <p>{translate('aboutUsText', language)}</p>\n        </div>\n      </section>\n    </Fragment>\n  );\n}\n\nexport default About;","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { translate } from '../config/i18n';\r\nimport { RootState } from '../store';\r\n\r\nconst Page404: FC = () => {\r\n  const { language } = useSelector((state: RootState) => state.lang);\r\n\r\n  return(\r\n    <div className=\"page-404\">\r\n      <div className=\"container\">\r\n        <h1>404</h1>\r\n        <p>{translate('pageDoesNotExist', language)}</p>\r\n        <p><Link to=\"/\">{translate('returnToHomepage', language)}</Link></p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page404;","import { Card, CardActionArea, CardContent, Grid } from '@material-ui/core';\r\nimport DeckIcon from '@material-ui/icons/Deck';\r\ninterface TablesType {\r\n    numberTable: number;\r\n    isAvailable: 'inherit' | 'primary' | 'secondary' | 'action' | 'disabled' | 'error';\r\n}\r\n\r\nconst Tables = ({ numberTable, isAvailable }: TablesType) => {\r\n    return (\r\n        <Grid item xs={4} md={4} >\r\n            <Card style={{backgroundColor:\" #f1f1f196\"}}>\r\n                <CardActionArea>\r\n                    <CardContent style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        flexWrap: 'wrap',\r\n                    }}>\r\n                        <DeckIcon fontSize={\"large\"}\r\n                            color={isAvailable} />\r\n                        <p \r\n                                style = {{\r\n                                marginLeft: \"16px\",\r\n                                marginTop: \"8px\"\r\n                            }}\r\n                        > #{numberTable}</p>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Tables;","import { Card, CardActionArea, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport React, { Fragment, FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CropDinIcon from '@material-ui/icons/CropDin';\r\nimport Header from '../components/Header';\r\nimport DeckIcon from '@material-ui/icons/Deck';\r\nimport { translate } from '../config/i18n';\r\nimport { RootState } from '../store';\r\nimport Tables from '../components/Tables';\r\n\r\nconst HomePage: FC = () => {\r\n  const { language } = useSelector((state: RootState) => state.lang);\r\n\r\n  return (\r\n    <Fragment> \r\n      \r\n      <section className=\"intro\"> \r\n        <Grid container className=\"intro__body\">\r\n          <Grid item xs={12} md={12} >\r\n          <Header fixed transparent/>\r\n          </Grid>\r\n          \r\n\r\n          <Grid container >\r\n            <Grid item xs={6} md={6} >\r\n              <Card style={{backgroundColor:\"rgb(128 63 63 / 47%)\"}}>\r\n                <CardActionArea>\r\n                  <CardContent>\r\n                    <Typography variant=\"body2\"\r\n                      color=\"textSecondary\" component=\"p\"\r\n                      align=\"center\">\r\n                      <CropDinIcon color=\"error\" />\r\n                      <p>{translate(\"busy\",language)}</p>\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={6} md={6} >\r\n              <Card style={{backgroundColor:\"rgb(128 63 63 / 47%)\"}}>\r\n                <CardActionArea>\r\n                  <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"\r\n                      align=\"center\">\r\n                      <CropDinIcon color=\"primary\" />\r\n                      <p>{translate(\"available\",language)}</p>  </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          \r\n          <Grid container >\r\n            <Tables numberTable ={1} isAvailable =\"error\" />\r\n            <Tables numberTable ={2} isAvailable =\"error\" />\r\n            <Tables numberTable ={3} isAvailable =\"primary\" />\r\n            <Tables numberTable ={4} isAvailable =\"primary\" />\r\n            <Tables numberTable ={5} isAvailable =\"error\" />\r\n            <Tables numberTable ={6} isAvailable =\"primary\" />\r\n            <Tables numberTable ={7} isAvailable =\"primary\" />\r\n            <Tables numberTable ={8} isAvailable =\"error\" />\r\n            <Tables numberTable ={9} isAvailable =\"primary\" />\r\n            <Tables numberTable ={10} isAvailable =\"error\" />\r\n            <Tables numberTable ={11} isAvailable =\"primary\" />\r\n            <Tables numberTable ={12} isAvailable =\"error\" />\r\n    </Grid>\r\n        </Grid>\r\n      </section>\r\n      {/*   <section className=\"intro\">\r\n        <div className=\"intro__overlay\"></div>\r\n        <div className=\"intro__body\">\r\n          <h1>Menú virtual</h1>\r\n          <p>{translate('introText', language)}</p>\r\n        </div>\r\n      </section> */}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import React, { FC } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport About from './pages/About';\nimport Page404 from './pages/404';\nimport HomePage from './pages/Homepage';\n\nconst App: FC = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/about\" exact>\n          <About />\n        </Route>\n        <Route path=\"*\">\n          <Page404 />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","  \r\nimport { SET_LANGUAGE, LangAction, LangState } from '../types';\r\n\r\nconst localSorageLang = localStorage.getItem('language');\r\n\r\nconst initialState: LangState = {\r\n  language: localSorageLang ? localSorageLang : 'EN'\r\n}\r\n\r\nconst langReducer = (state = initialState, action: LangAction) => {\r\n  switch(action.type) {\r\n    case SET_LANGUAGE:\r\n      return {\r\n        ...state,\r\n        language: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default langReducer;","  \r\nimport { createStore, combineReducers } from 'redux';\r\n\r\nimport langReducer from './reducers/langReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  lang: langReducer\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}